// <auto-generated />
using System;
using MedicineReportApi.DbContextModel;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MedicineReportApi.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20210107095649_firstMigration")]
    partial class firstMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("MedicineReportApi.Model.MedicineForTendering", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("TenderId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("MedicineForTendering");

                    b.HasData(
                        new
                        {
                            id = 1,
                            Name = "Andol",
                            Quantity = 135,
                            TenderId = 1
                        });
                });

            modelBuilder.Entity("MedicineReportApi.Model.RegistrationInPharmacy", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ApiKey")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("PharmacyId")
                        .HasColumnType("int");

                    b.Property<string>("Town")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("id");

                    b.ToTable("Registrations");

                    b.HasData(
                        new
                        {
                            id = 1,
                            ApiKey = "api1",
                            Name = "Jankovic 1",
                            PharmacyId = 1,
                            Town = "Novi Sad"
                        });
                });

            modelBuilder.Entity("MedicineReportApi.Model.Tender", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("ActiveUntil")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("Closed")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("id");

                    b.ToTable("Tender");

                    b.HasData(
                        new
                        {
                            id = 1,
                            ActiveUntil = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Closed = false
                        });
                });
#pragma warning restore 612, 618
        }
    }
}

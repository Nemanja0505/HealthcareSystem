// <auto-generated />
using MedicineInformationApi.DbContextModel;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MedicineInformationApi.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20210116160141_fifthigration")]
    partial class fifthigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("MedicineInformationApi.Model.MedicineDescription", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("Description")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("MedicineInformationId")
                        .HasColumnType("int");

                    b.HasKey("Name");

                    b.HasIndex("MedicineInformationId")
                        .IsUnique();

                    b.ToTable("MedicineDescriptions");

                    b.HasData(
                        new
                        {
                            Name = "Andol",
                            Description = "Against pain",
                            MedicineInformationId = 1
                        });
                });

            modelBuilder.Entity("MedicineInformationApi.Model.MedicineInformation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("MedicineInformations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Quantity = 150
                        });
                });

            modelBuilder.Entity("MedicineInformationApi.Model.MedicineDescription", b =>
                {
                    b.HasOne("MedicineInformationApi.Model.MedicineInformation", null)
                        .WithOne("MedicineDescription")
                        .HasForeignKey("MedicineInformationApi.Model.MedicineDescription", "MedicineInformationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
